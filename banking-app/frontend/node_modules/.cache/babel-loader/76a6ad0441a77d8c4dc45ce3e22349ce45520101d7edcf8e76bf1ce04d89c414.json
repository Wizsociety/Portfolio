{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tact\\\\Desktop\\\\Portfolio\\\\banking-app\\\\frontend\\\\src\\\\components\\\\Auth\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        role\n      } = response.data;\n      const userData = {\n        username,\n        role\n      };\n      setUser(userData);\n      setToken(token);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Login failed');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Z6Vnyj+tvkpOopJdPBR2TDv1n60=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["axios","jsxDEV","_jsxDEV","AuthProvider","children","_s","user","setUser","useState","token","setToken","localStorage","getItem","useEffect","storedUser","JSON","parse","login","username","password","response","post","role","data","userData","setItem","stringify","error","_error$response","_error$response$data","_error$response2","_error$response2$data","console","message","Error","logout","removeItem","AuthContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tact/Desktop/Portfolio/banking-app/frontend/src/components/Auth/AuthContext.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', { username, password });\r\n      const { token, role } = response.data;\r\n\r\n      const userData = { username, role };\r\n      setUser(userData);\r\n      setToken(token);\r\n\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      console.error('Login failed:', error.response?.data?.error || error.message);\r\n      throw new Error(error.response?.data?.error || 'Login failed');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjEC,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIE,UAAU,EAAE;MACdP,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,sCAAsC,EAAE;QAAEH,QAAQ;QAAEC;MAAS,CAAC,CAAC;MACjG,MAAM;QAAEV,KAAK;QAAEa;MAAK,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAErC,MAAMC,QAAQ,GAAG;QAAEN,QAAQ;QAAEI;MAAK,CAAC;MACnCf,OAAO,CAACiB,QAAQ,CAAC;MACjBd,QAAQ,CAACD,KAAK,CAAC;MAEfE,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEhB,KAAK,CAAC;MACpCE,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdC,OAAO,CAACL,KAAK,CAAC,eAAe,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAIA,KAAK,CAACM,OAAO,CAAC;MAC5E,MAAM,IAAIC,KAAK,CAAC,EAAAJ,gBAAA,GAAAH,KAAK,CAACP,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBJ,KAAK,KAAI,cAAc,CAAC;IAChE;EACF,CAAC;EAED,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACnB5B,OAAO,CAAC,IAAI,CAAC;IACbG,QAAQ,CAAC,IAAI,CAAC;IACdC,YAAY,CAACyB,UAAU,CAAC,OAAO,CAAC;IAChCzB,YAAY,CAACyB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACElC,OAAA,CAACmC,WAAW,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAEjC,IAAI;MAAEG,KAAK;MAAEQ,KAAK;MAAEkB;IAAO,CAAE;IAAA/B,QAAA,EACzDA;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtC,EAAA,CAxCWF,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}