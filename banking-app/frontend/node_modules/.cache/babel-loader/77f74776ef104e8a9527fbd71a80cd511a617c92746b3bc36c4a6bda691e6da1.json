{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tact\\\\Desktop\\\\Portfolio\\\\banking-app\\\\frontend\\\\src\\\\components\\\\Notifications\\\\NotificationPanel.js\",\n  _s = $RefreshSig$();\n// src/components/Notifications/NotificationPanel.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../Auth/AuthContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationPanel = () => {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    fetchNotifications();\n    // Set up real-time updates if needed\n    const interval = setInterval(fetchNotifications, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/notifications`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(response.data);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      await axios.put(`${process.env.REACT_APP_API_URL}/notifications/${notificationId}/read`, {},\n      // PUT body if no additional data is required\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchNotifications(); // Refresh notifications after marking as read\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: notification.read ? 'read' : 'unread',\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), !notification.read && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markAsRead(notification.id),\n          children: \"Mark as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No notifications available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationPanel, \"/ij3Ep6Sg5u4wwB/dvWcoR+IwUY=\");\n_c = NotificationPanel;\nexport default NotificationPanel;\nvar _c;\n$RefreshReg$(_c, \"NotificationPanel\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","axios","jsxDEV","_jsxDEV","NotificationPanel","_s","token","notifications","setNotifications","fetchNotifications","interval","setInterval","clearInterval","response","get","process","env","REACT_APP_API_URL","headers","Authorization","data","error","console","markAsRead","notificationId","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notification","read","message","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Tact/Desktop/Portfolio/banking-app/frontend/src/components/Notifications/NotificationPanel.js"],"sourcesContent":["// src/components/Notifications/NotificationPanel.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../Auth/AuthContext';\r\nimport axios from 'axios';\r\n\r\nconst NotificationPanel = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n    // Set up real-time updates if needed\r\n    const interval = setInterval(fetchNotifications, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/notifications`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setNotifications(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching notifications:', error);\r\n    }\r\n  };\r\n\r\n  const markAsRead = async (notificationId) => {\r\n    try {\r\n      await axios.put(\r\n        `${process.env.REACT_APP_API_URL}/notifications/${notificationId}/read`,\r\n        {}, // PUT body if no additional data is required\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      fetchNotifications(); // Refresh notifications after marking as read\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notification-panel\">\r\n      <h2>Notifications</h2>\r\n      {notifications.length > 0 ? (\r\n        <ul>\r\n          {notifications.map((notification) => (\r\n            <li key={notification.id} className={notification.read ? 'read' : 'unread'}>\r\n              <p>{notification.message}</p>\r\n              {!notification.read && (\r\n                <button onClick={() => markAsRead(notification.id)}>Mark as Read</button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No notifications available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPanel;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}